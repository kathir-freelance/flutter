
;
1
void main()
2
{
3
  
4
  var areaOfCircle=calculateAreaOfCircle(3.5);
5
  print(areaOfCircle);
6
  calculateAreaOfCircle1(2.2);
7
}
8
​
9
double calculateAreaOfCircle(double radius){
10
  
11
  const PI=3.14;
12
  double area=PI*radius*radius;
13
  return area;
14
  
15
}
16
​
17
void calculateAreaOfCircle1(double radius){
18
  
19
  const PI=3.14;
20
  double area=PI*radius*radius;
21
  print(area);
22
  
23
}
Console
38.465
15.197600000000003


=======================
void main()
{
  
  var areaOfCircle=calculateAreaOfCircle(3.5);
  print(areaOfCircle);
  calculateAreaOfCircle1(2.2);
  getData();
  getAge();
}

double calculateAreaOfCircle(double radius){
  
  const PI=3.14;
  double area=PI*radius*radius;
  return area;
  
}

void calculateAreaOfCircle1(double radius){
  
  const PI=3.14;
  double area=PI*radius*radius;
  print(area);
  
}

void getData([int? a]){  
  print(a);
}
void getAge([int? a]){  
  a=a??34;
  print(a);
}

void main()
{
  getData(d:899,b:2,a:1);
  getData(d:67,b:2,a:1,c:34);
}



void getData({required int d,int? a,int? b,int c=9}){  
  print('a value is $a');
  print('a value is $b');
  print('a value is $c');
  print('a value is $d');
}


class Mobile {
  String color;
  String brandName;

  String calling() {
    return "Mobile can do calling";
  }

  String musicPlay() {
    return "Mobile can play Music";
  }
}



void add(int a, int b){
	print(a+b);
}

var add=(int a,int b){
	print(a+b);
}

var add=(a,b)=> print(a+b);

m1(add);

void m1(Function g){
	int x=90;int y=88;
	g(x,y);
}




class Vehicle {
  String? make;
  String? model;
  
  int vehicleAge=0;
  String? color;

  int get age {
    return vehicleAge;
  }

   set age(int currentYear) {
    vehicleAge = currentYear - 1;
  }

  // We can also eliminate the setter and just use a getter.
  //int get age {
  //  return DateTime.now().year - manufactureYear;
  //}

  Vehicle({this.make,this.model,this.color,});
}

void main() {
 Vehicle car = 
 Vehicle(make:"Honda",model:"Civic",color:"red");
  print(car.make); // output - Honda
  print(car.model); // output - Civic
  car.age = 2019;
  print(car.age); // output - 9

}

void main(){
  
  fun(1,a:899,c:4);
}

void fun(int b,{required int? c,int a=90}){
  print('$a $b $c');
}


void main(){
  
  //var emp=new Employee();
  var emp=Employee();//new is optional
  
}

class Employee{
  
  Employee(){
    print('object is created');
  }
}

=======================
void main(){
  
  //var emp=new Employee();
//  var emp=Employee();//new is optional
  Employee emp=Employee();//new is optional
  print('${emp.eid} ${emp.name} ${emp.addr}');
  Employee emp1=Employee();
  emp1.addr='no.3 bglr';
  print('${emp1.eid} ${emp1.name} ${emp1.addr}');
  
}

class Employee{
  
  int? eid;//instance or non-static variable
  String? name;
  String? addr;
  Employee(){
    eid=1;
    name='default';
    addr="no4 chn";
    print('object is created');
  }
}
================================
void main(){
 // add();
  //var emp=new Employee();
//  var emp=Employee();//new is optional
  Employee emp=Employee.details(123,'ajay');//new is optional
  print('${emp.eid} ${emp.name} ${emp.addr}');
  Employee emp1=Employee();
  emp1.addr='no.3 bglr';
  print('${emp1.eid} ${emp1.name} ${emp1.addr}');
  Employee emp2=Employee.addrFillAllDetails(123,'ajay',"no. 7 mumbai");//new is optional
  print('${emp2.eid} ${emp2.name} ${emp2.addr}');
}

class Employee{
  
  int? eid;//instance or non-static variable
  String? name;
  String? addr;
  Employee(){}
  Employee.details(int eid,String empName){
    this.eid=eid;
    name=empName;
  }
  Employee.addrFillAllDetails(int eid,String empName,String addr){
    this.eid=eid;
    name=empName;
    this.addr=addr;
  }
}
=============
void main(){
 // add();
  //var emp=new Employee();
//  var emp=Employee();//new is optional
  
  Employee emp1=Employee();
  emp1.addr='no.3 bglr';
  }

class Employee{
  
  int? eid;//instance or non-static variable
  String? name;
  String? addr;
  
  
}

===================
inheritance:

class A{
	void method1(){}
}

class B
{

}
=============
class Calc{
	void add(){
    print("method is called");
  }
}

class ScitificCalc extends Calc
{
  void sin(){
    print("sin of a numb 10");
  }

}

void main(){
  
  ScitificCalc obj=ScitificCalc();
  obj.add();
  obj.sin();
  
  Calc c= Calc();
  c.add();
  //c.sin();
  c.hashCode
}





















