https://api.flutter.dev/flutter/material/FloatingActionButton-class.html

Scaffold and appbar widget

void main() {
  runApp(MaterialApp(
    home: Scaffold(
      appBar: AppBar(
        title: Text('my app'),
      ),
    ),
  ));
}

2.

import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home: Scaffold(
      appBar: AppBar(
        title: Text('my app'),
        centerTitle: true,
      ),
      body: Center(
        child: Text('hi welcome to my first flutter app'),
      ),
      floatingActionButton: FloatingActionButton(
        child: Text('click'),
        onPressed: () {
          // Add your onPressed code here!
          print('clicked');
        },
      ),
    ),
  ));
}


3. colors and fonts:
https://material.io/design/color/the-color-system.html

import 'package:flutter/material.dart';

void main() {
  runApp(MaterialApp(
    home: Scaffold(
      appBar: AppBar(
        title: Text('my app'),
        centerTitle: true,
	backgroundColor:colors.red[600],
      ),
      body: Center(
        child: Text(
	'hi welcome to my first flutter app'	
	style: TextStyle(
	fontSize:20.0,
	fontWeight: FontWeigtht.bold,
	letterSpacing:2.0,
	color: colors.grey[600];

		)
	),
      ),
      floatingActionButton: FloatingActionButton(
        child: Text('click'),
	backgroundColor:colors.red[600],
        onPressed: () {
          // Add your onPressed code here!
          print('clicked');
        },
      ),
    ),
  ));
}

adding font:

	download fot from material website
	create a folder named fonts in app
	extract and copy paste it into project
	open pubspec.yaml, add font detail there as below

fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700

stateless widget and hot reload:
=================================

step 1:

import 'package:flutter/material.dart';

void main() {
 runApp(new DogApp());
}

class DogApp extends StatelessWidget {
 @override
 Widget build(BuildContext context) {
   return MaterialApp(
     title: 'My Dog App',
     home: Scaffold(
       appBar: AppBar(
         title: Text('Yellow Lab'),
       ),
       body: Center(
         child: DecoratedBox(
           decoration: BoxDecoration(color: Colors.lightBlueAccent),
           child: Padding(
             padding: const EdgeInsets.all(8.0)
             child: Text('Rocky'),
           ),
         ),
       ),
     ),
   );
 }

step 2:

body: Center(
         child:
	 Column(
           mainAxisAlignment: MainAxisAlignment.center,
           children: [
             DecoratedBox(
               decoration: BoxDecoration(color: Colors.lightBlueAccent),
               child: Padding(
                 padding: const EdgeInsets.all(8.0),
                 child: Text('Rocky'),
               ),
             ),
             DecoratedBox(
               decoration: BoxDecoration(color: Colors.lightBlueAccent),
               child: Padding(
                 padding: const EdgeInsets.all(8.0),
                 child: Text('Spot'),
               ),
             ),
             DecoratedBox(
               decoration: BoxDecoration(color: Colors.lightBlueAccent),
               child: Padding(
                 padding: const EdgeInsets.all(8.0),
                 child: Text('Fido'),
               ),
             ),
           ],
         ),
       ),

step 3:

use a widget called SizedBox to add blank space between them

many codes are repeated, remove those boiler plate codes.


Images and assets:
=====================
child: Image(
          image: NetworkImage(
              "https://images.unsplash.com/photo-1620415608024-32341999af49?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=387&q=80"),
        ))

ensure correct image address is given;

IF i want to use image from application

create a folder images or assets in app

copy paste the images into it

register them min pubspec.yaml

# assets:
  #   - images/b_dot.jpeg
  #   - images/a_dot_ham.jpeg

once abv step is done, chnage the name of image in AssetImage("images/a_dot_ham.jpeg");

if at all we r gonna have many images shud v declare image in pubspec.yaml...
not needed instead, we can add as below

	#assests:
	assets/

in code:

   image: AssetImage("assets/phot.jfif"),
or else
	image.network() or
	image.assets(); 

[donot put numbers for image name ]

Buttons and icons:
====================

Icon:

 body: Center(
          child: const Icon(
            Icons.airport_shuttle_sharp,
            color: Colors.blueGrey,
            size: 50,
          ),

Button:
RaisedButton and FlatButton are depricated

ElevetedButton
TextButton(
            child: Text("click me"),
            onPressed: () {
              print('clicked me');
            },
            onLongPress: () {
              print('pressed for much time');
            },
          ),

4.
Button with Icon:
ElevatedButton(
            child: Text('Button'),
            onPressed: () {},
            style: ElevatedButton.styleFrom(
                primary: Colors.purple,
                padding: EdgeInsets.symmetric(horizontal: 50, vertical: 20),
                textStyle: TextStyle(
                fontSize: 30,
                fontWeight: FontWeight.bold)),
),

 ElevatedButton.icon(
          onPressed: () {
            print('welcome');
          },
          // onFocusChange: (hasFocus) {
          //   print(hasFocus ? 'hi' : 'else');
          // },
          icon: const Icon(Icons.mail),
          label: const Text("mail me"),
          style: ElevatedButton.styleFrom(primary: Colors.amber),
        ))

You can style ElevatedButton by using the styleFrom static method or the ButtonStyle class. The first one is more convenience than the second one.

Task:
=====
Find out what is ICon Button;


Layouts:
=========
	Scaffold
	Center
	ThemeData
	Containers
	Rows and columns
	Stack
	ListView
	GridView
	Navigation

Scaffold:
==========

  return MaterialApp(
      home: Scaffold(
        appBar: AppBar(
          title: const Text("myapp"),
        ),
        body: const Center(
          child: Text("hiiii"),
        ),
        floatingActionButton: FloatingActionButton(
            child: const Icon(Icons.lightbulb_outline),
            onPressed: () {
              print('hi');
            }),
        persistentFooterButtons: [
          IconButton(onPressed: () {}, icon: Icon(Icons.ac_unit)),
          IconButton(onPressed: () {}, icon: Icon(Icons.access_time_filled)),
          IconButton(onPressed: () {}, icon: Icon(Icons.access_alarms))
        ],
      ),
    );

Changing theme:
=================

use material palette [https://www.materialpalette.com/]

. Color primaryColor:
This is the background color of major parts of the app like toolbars, tab bars, appbar, and many more.

Color accentColor:
The accent color is also known as a secondary color. This is foreground color for widgets like knobs, text, overscroll edge effect, etc.

ThemeData darkTheme = ThemeData(
    brightness: Brightness.dark,
    visualDensity: VisualDensity(vertical: 0.5, horizontal: 0.5),
    primarySwatch: MaterialColor(
      0xFFF5E0C3,
      <int, Color>{
        50: Color(0x1a5D4524),
        100: Color(0xa15D4524),
        200: Color(0xaa5D4524),
        300: Color(0xaf5D4524),
        400: Color(0x1a483112),
        500: Color(0xa1483112),
        600: Color(0xaa483112),
        700: Color(0xff483112),
        800: Color(0xaf2F1E06),
        900: Color(0xff2F1E06)
      },
    ),
    primaryColor: Color(0xff5D4524),
    primaryColorBrightness: Brightness.dark,
    primaryColorLight: Color(0x1a311F06),
    primaryColorDark: Color(0xff936F3E),
    canvasColor: Color(0xffE09E45),
    accentColor: Color(0xff457BE0),
    accentColorBrightness: Brightness.dark,
    scaffoldBackgroundColor: Color(0xffB5BFD3),
    bottomAppBarColor: Color(0xff6D42CE),
    cardColor: Color(0xaa311F06),
    dividerColor: Color(0x1f6D42CE),
    focusColor: Color(0x1a311F06));

Task:

Toggle between themes 

class Emp {
}
class Admin extends  Emp{
}
class Manager extends  Emp{
}
List<? extends Emp>

=====================================================================================
bulb icon for adding and customizing code

expanded widget:
================
add Row widget and add 3 container with diff color
click bulb icon and add expanded on container

expanded has a spl property called flex:

=========================================
21:34 19-01-2022
-------------------
1.
Container(
  child: Text(
    'This is a Container',
    textScaleFactor: 2,
    style: TextStyle(color: Colors.black),
  ),
  decoration: BoxDecoration(
    borderRadius: BorderRadius.circular(10),
    color: Colors.white,
    boxShadow: [
      BoxShadow(color: Colors.green, spreadRadius: 3),
    ],
  ),
  height: 50,
),

2.
CircleAvatar(
                    backgroundImage: NetworkImage("https://w7.pngwing.com/pngs/954/328/png-transparent-computer-icons-user-profile-avatar-heroes-head-recruiter-thumbnail.png"),
                    radius: 40.0,

                  )
3.
divider:
	    Divider(
                height: 40.0,
                thickness: 4.0,
                color: Colors.grey[800],
                indent: 80,
                endIndent: 80,
              )

faded? use this ?
SizedBox(
  width: 200,
  height: 4,
  child: Container(
    decoration: BoxDecoration(
      gradient: //...
    ),
  ),
),

use box shadow in decoration box and 
borderwidget in the same

convert a stateless into statefull:

keep mouse on the class name and click on bulb icona nd select convert to stateful widget
after chnaging is it throwing error even if code is right?

hot restart it...
error Gone!!!

add below snippet to display like button and on clicking like it show show number of count

 		Row(
                mainAxisAlignment: MainAxisAlignment.center, //centers the icon
                crossAxisAlignment: CrossAxisAlignment.center,//cneters row elements to center of icon here ie 5 is in vertical center of the thumb icon
                children: [
                   IconButton(onPressed: ()=>
                    _incrementCounter() ,highlightColor: Colors.amber, color:Colors.grey,icon: Icon(Icons.thumb_up_off_alt_rounded)),
                Text('$_counter',style:TextStyle(
                    color:Colors.white54
                  )),
                ],

              ),

 Next Step is to display list of data:

https://www.bezkoder.com/dart-list/

complete the task....
basic idea is given below ...

create a dart file named User as below

class User{
  String? _userName;
  String? _designation;
  String? _mail;
  int _count=0;
  User(this._userName,this._designation,this._mail,this._count);

  @override
  String toString()
  getters for variable 
}

 Widget _displayName(){

    var map = users.map((userItem)=>{
       userItem.userName
    });
    return
     Text(map.toList().elementAt(0).toString(),
          style: TextStyle(
            color:  Colors.amber,
            fontSize: 28.0,
            letterSpacing: 2.0,
            fontWeight: FontWeight.bold,
          )
      );
  }

List<User> users = [];
  User u=User('ajay','manager','ajay@gmail.com',0);
  _MyAppState(){
    users.add(u);
    users.add(User('abc','admin','aaa@gmail.com',0));
    users.add(User('bbb','trainer','bbb@gmail.com',0));
  }
add above code to myappstate class


in the place where we were displaying name replace it with function call
	     SizedBox(height: 10.0),
             _displayName(),
             SizedBox(height: 40.0),

=============================

simple usage of iterating list of data:
import 'package:flutter/material.dart';

void main() => runApp(MaterialApp(
  home: QuoteList()
));

class QuoteList extends StatefulWidget {
  @override
  _QuoteListState createState() => _QuoteListState();
}

class _QuoteListState extends State<QuoteList> {

  List<String> quotes = [
    'Be yourself; everyone else is already taken',
    'I have nothing to declare except my genius',
    'The truth is rarely pure and never simple'
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.grey[200],
      appBar: AppBar(
        title: Text('Awesome Quotes'),
        centerTitle: true,
        backgroundColor: Colors.redAccent,
      ),
      body: Column(
        children: quotes.map((quote) => Text(quote)).toList(),
      ),
    );
  }
}

================
splitting into custom widget for quotes

class Quote {

  String text;
  String author;

  //  normal constructor, as we've already seen

  //  Quote(String author, String text){
  //    this.text = text;
  //    this.author = author;
  //  }

  //  constructor with named parameters

  //  Quote({ String author, String text }){
  //    this.text = text;
  //    this.author = author;
  //  }

  // constructor with named parameters
  // & automatically assigns named arguments to class properties

  Quote({ this.text, this.author });

and add this in main.dart

List<Quote> quotes = [
    Quote(author: 'Oscar Wilde', text: 'Be yourself; everyone else is already taken'),
    Quote(author: 'Oscar', text: 'I have nothing to declare except my genius'),
    Quote(author: 'Wilde', text: 'The truth is rarely pure and never simple')
  ];

and

 body: Column(
        children: quotes.map((quote) => Text('${quote.text} - ${quote.author}')).toList(),
      ),

replace them with a seperate function as belowinstead of above iteration widget generation

 Widget quoteGenerate(quote){

   return Card(
     color: Colors.blue,
     elevation: 3.0,
     margin: EdgeInsets.fromLTRB(16.0,16.0, 16.0, 0),

     child:
       Padding(
         padding: const EdgeInsets.all(8.0),

         child:
         Column(
           
           children:
             <Widget>[
               Text('$quote.text',
                style: TextStyle(
                  fontSize: 18.0,
                  color: Colors.white54,
                )
               ),
              SizedBox(height:30.0),
               Text('$quote.author',
                   style: TextStyle(
                     fontSize: 18.0,
                     color: Colors.deepOrange,
                   )
               ),
           ],
         ),
       )
   );
 }

and replace below 
	children: quotes.map((quote) => Text('${quote.text} - ${quote.author}')).toList(),
this
   children: quotes.map((quote) => quoteGenerate(quote)).toList(),

=====================================================================================
extracting the widgets:

ctrl + click on the widget which we need to extract and then select 
flutter outline panel on right of Andriod studio.

look for Card in above case:

rgt click and select extract widget and make changes into code to get previous same output

in quote widget in main.dart

final Quote quote;
  QuoteCard({required this.quote});
in main.dart
children: quotes.map((quote) =>QuoteCard(quote:quote)).toList(),

==================================================================
deleting card : pass function as parameter of called function

 body: Column(
         children: quotes.map((quote) =>QuoteCard(quote:quote,delete: (){
           setState(() {
             quotes.remove(quote);
           });
         })).toList(),

      ),

add this in quoteCard:
final Function()? delete;
  QuoteCard({required this.quote,this.delete});

and

onPressed: this.delete

=====================================================================================
new application: World Clock timer

Step1: create a new application
Step2: create a directory named pages and create 3 dart file named home,find_location and loading
Step3: open Home.dart and create a statefull widget name it home 
	inside build method change the container widget to Text widget 
Step4: goto main.dart and import the package as below

import 'package:flutter/material.dart';
import 'package:world_timer_app/pages/home.dart';

void main() {
  runApp(MaterialApp(
    home:home()
  ));
}


Step5: the o/p shows home scree nearby time, to push it below we can make use of 
	SafeArea widget

	click Text widget in home.dart and click on bulb and choose wrap it with widget and
	name it as SafeArea. now its pushed down.

Step6:
	similiarly create a statefull widget for find_location and loading.dart files

Step7: 
	adding routes and Maps:

	create a route property in in main method below home: as shown below
import 'package:world_timer_app/pages/find_location.dart';
import 'package:world_timer_app/pages/home.dart';
import 'package:world_timer_app/pages/loading.dart';


	 home:home(),
    routes: {
      '/':(context)=>loading(),
      '/location':(context)=>findLocation(),
      '/home':(context)=>home()
    },

	import respective packages.

	Hot Restart to see changes
Step8:
	add a property initialRoute instead of Home as it will be correlating with routes
	initialRoute: '/home'
	

	

add this in pubspec.yaml  fluttertoast: ^8.0.8
under -> dependencies:
	  flutter:

then add it in the main.dart file:

import 'package:fluttertoast/fluttertoast.dart';









https://medium.com/flutter/how-to-create-stateless-widgets-6f33931d859
https://docs.flutter.dev/development/ui/interactive
https://medium.com/flutter-community/flutter-stateful-vs-stateless-db325309deae
https://blog.logrocket.com/difference-between-stateless-stateful-widgets-flutter/
https://kodytechnolab.com/blog/stateless-vs-stateful-widget/
https://docs.flutter.dev/development/ui/widgets-intro



