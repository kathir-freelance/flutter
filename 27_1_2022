form:
=======
import 'package:flutter/material.dart';

class FormScreen extends StatefulWidget {
  @override
  State<StatefulWidget> createState() {
    return FormScreenState();
  }
}

class FormScreenState extends State<FormScreen> {
  String _name;
  String _email;
  String _password;
  String _url;
  String _phoneNumber;
  String _calories;

  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();

  Widget _buildName() {
    return TextFormField(
      decoration: InputDecoration(labelText: 'Name'),
      maxLength: 10,
      validator: (String value) {
        if (value.isEmpty) {
          return 'Name is Required';
        }

        return null;
      },
      onSaved: (String value) {
        _name = value;
      },
    );
  }

  Widget _buildEmail() {
    return TextFormField(
      decoration: InputDecoration(labelText: 'Email'),
      validator: (String value) {
        if (value.isEmpty) {
          return 'Email is Required';
        }

        if (!RegExp(
                r"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?")
            .hasMatch(value)) {
          return 'Please enter a valid email Address';
        }

        return null;
      },
      onSaved: (String value) {
        _email = value;
      },
    );
  }

  Widget _buildPassword() {
    return TextFormField(
      decoration: InputDecoration(labelText: 'Password'),
      keyboardType: TextInputType.visiblePassword,
      validator: (String value) {
        if (value.isEmpty) {
          return 'Password is Required';
        }

        return null;
      },
      onSaved: (String value) {
        _password = value;
      },
    );
  }

  Widget _builURL() {
    return TextFormField(
      decoration: InputDecoration(labelText: 'Url'),
      keyboardType: TextInputType.url,
      validator: (String value) {
        if (value.isEmpty) {
          return 'URL is Required';
        }

        return null;
      },
      onSaved: (String value) {
        _url = value;
      },
    );
  }

  Widget _buildPhoneNumber() {
    return TextFormField(
      decoration: InputDecoration(labelText: 'Phone number'),
      keyboardType: TextInputType.phone,
      validator: (String value) {
        if (value.isEmpty) {
          return 'Phone number is Required';
        }

        return null;
      },
      onSaved: (String value) {
        _url = value;
      },
    );
  }

  Widget _buildCalories() {
    return TextFormField(
      decoration: InputDecoration(labelText: 'Calories'),
      keyboardType: TextInputType.number,
      validator: (String value) {
        int calories = int.tryParse(value);

        if (calories == null || calories <= 0) {
          return 'Calories must be greater than 0';
        }

        return null;
      },
      onSaved: (String value) {
        _calories = value;
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Form Demo")),
      body: SingleChildScrollView(
        child: Container(
          margin: EdgeInsets.all(24),
          child: Form(
            key: _formKey,
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: <Widget>[
                _buildName(),
                _buildEmail(),
                _buildPassword(),
                _builURL(),
                _buildPhoneNumber(),
                _buildCalories(),
                SizedBox(height: 100),
                RaisedButton(
                  child: Text(
                    'Submit',
                    style: TextStyle(color: Colors.blue, fontSize: 16),
                  ),
                  onPressed: () {
                    if (!_formKey.currentState.validate()) {
                      return;
                    }

                    _formKey.currentState.save();

                    print(_name);
                    print(_email);
                    print(_phoneNumber);
                    print(_url);
                    print(_password);
                    print(_calories);

                    //Send to API
                  },
                )
              ],
            ),
          ),
        ),
      ),
    );
  }
}

World time api - http example - service example:
===================================================
C:\Users\kathi\StudioProjects\world_timer_app

Try to make your own back button :
==================================
 appBar: AppBar(
                    leading: IconButton(
                    icon: Icon(Icons.arrow_back_ios),
                    iconSize: 20.0,
                    onPressed: () {
                      _goBack(context);
                    },
                  ),
                  centerTitle: true,
                  title: Text('back')),
And the _goBack method :

 _goBack(BuildContext context) {
Navigator.pop(context);
}

flutter remove back button:
==============================
appBar: AppBar(
	title: Text('AppBar'),
    automaticallyImplyLeading: false, // remove back button in appbar.
   )


hide status bar and bottom bar in andriod mobile:
=====================================
@override
  void initState() {
    SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom]);
or
    SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.top]);
    super.initState();
  }

  @override
  void dispose() {
    SystemChrome.setEnabledSystemUIOverlays(
        [SystemUiOverlay.top, SystemUiOverlay.bottom]);

    super.dispose();
  }

For All pages (in main.dart):
=================================
void main() {
  SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom]);
  runApp(MaterialApp(
      debugShowCheckedModeBanner: false,
      theme: ThemeData(fontFamily: 'Poppins'),
      home: SplashScreen()));
}
Dont forget to import 'package:flutter/services.dart'

hide labels in BottomBar:
=============================

  showSelectedLabels: false,
  showUnselectedLabels: false,
======================================================================
task 1: Highlighting the selected item
task 2: on scrolling listView,Bottom Navigation bar should be hided 
======================================================================

Drawer:
========
refer drwaer demo in C:\Users\kathi\StudioProjects\drwaer_example

FAB & Snack Bar:

FAB:
======
step1:

Scaffold(
  floatingActionButton: FloatingActionButton(),
),

Step 2:
=========
Scaffold(
  floatingActionButton: FloatingActionButton(
    label: Text('Action'),
  ),
),

Example : twitter button

Things to note before coding FAB:
====================================
Don’t use multiple FABs - IMPORTANT -- used in few apps like google maps

By default, only the FAB’s icon should be displayed on the screen; 
including text, to some degree, defeats the purpose of using the FAB widget.

However, in the case of extended FAB, this rule is inverted. With an extended FAB, 
you may display only the label or icon and label both. By contrast, displaying only 
the icon in an extended floating action button is not allowed.



FloatingActionButton(
	splashColor: Colors.purple,
foreground color:
foregroundColor: Colors.pink,
hoverColor: Colors.orange,
elevation: 12,
onPressed: null,
disabledElevation: 0,
hoverElevation: 50,
mini: true,
mouseCursor: MaterialStateMouseCursor.textable,
tooltip: 'Save',
shape: RoundedRectangleBorder(),
),
=====================================================================================
Task 3: ExpandableFAB?
=====================================================================================
SnackBar:

SnackBar is a Flutter widget that enables you to temporarily display a pop-up message in your app.


SI calc app steps: 
===================
refer image in "C:\Users\kathi\Desktop\flutter\flutter_task\27_1_2022 demo"


complete the logic of this app. implement forms and validation


